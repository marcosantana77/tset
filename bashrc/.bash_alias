echo "t7's on!"
echo ""

alias ll="ls -lta"
#alias lockit="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
alias py=python\ 
export t7path=$HOME/d/t7/


#t7 
function t7() {
  cd $t7path
  echo ""
  echo "[; hello, what r we up to ?"
  echo "" 
}

function t7code() {
  pushd $t7path 
  code . 
  popd 
}

function t7subl() {
  pushd $t7path
  subl .
  popd
}


# hardware and security 
function wifioff() {
  networksetup -setairportpower en0 off
}

function wifion() {
  networksetup -setairportpower en0 on
}

function lockit() {
  blueutil off
  wifioff
  /System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend
}

#virtualization and cloud stuff
function t7act () {
  if [ $1 == gg ]; 
  then 
    ggsubpath=bashrc/.bash_alias_gcloud;
    source $t7path$ggsubpath;
    ggact;
  elif [ $1 == vb ] ;
  then
    vbsubpath=bashrc/.bash_alias_vbox;
    source $t7path$vbsubpath; 
  fi
}

#stuff 
function speedtesta() {
  curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python - ;
} 

function speedtest() {
  speedtesta | grep -e 'Testing from' -e Hosted -e Download -e Upload;
}

function encurlit() { 
  echo -ne "$1" | hexdump -v -e '/1 "%02x"' | sed 's/\(..\)/%\1/g'; 
} 

function myip() { 
 ifconfig | grep inet\ ;
}

function histail() {
  history | tail -n "$1"
}

#sec stuff
function myports() { 
   nmap -p 1-65535  127.0.0.1; 
}

function sshkeygen() {
  ssh-keygen -t rsa -f $HOME/.ssh/"$1" -C "$2";
  chmod 400 $HOME/.ssh/"$1"; 
}


## derived from https://gist.github.com/epiloque/8cf512c6d64641bde388
## works for arrays of hashes, as long as the hashes do not have arrays
function parse_yaml2() {
    local prefix=$2
    local s
    local w
    local fs
    s='[[:space:]]*'
    w='[a-zA-Z0-9_]*'
    fs="$(echo @|tr @ '\034')"
    sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s[:-]$s\(.*\)$s\$|\1$fs\2$fs\3|p" "$1" |
    awk -F"$fs" '{
      indent = length($1)/2;
      if (length($2) == 0) { conj[indent]="+";} else {conj[indent]="";}
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
              vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
              printf("%s%s%s%s=(\"%s\")\n", "'"$prefix"'",vn, $2, conj[indent-1],$3);
      }
    }' | sed 's/_=/+=/g'
}

#screen functions

function scls() { 
  screen -ls; 
}

function scr() { 
  screen -r "$1"; 
}

function scS() { 
  screen -S "$1"; 
}

function scSdm() {
  screen -Sdm $1 $2; 
}


#say functions

#portuguese voices
#Joana, Luciana
function elaFala() {
  say -v Joana "$1";
}

# english voices
# Karen, Samantha, Tessa
function sheSays() { say -v Karen "$1"; }


function testBaby() {
  sheSays "Baby, Baby"; 
  elaFala "Fica bonitinha. Ficafica bonitinha"; 
  sheSays "Baby, "; 
  elaFala "Nao me irritaaaa";
}  
